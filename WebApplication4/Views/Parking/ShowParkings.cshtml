
@model WebApplication4.Models.ShowParking

   


  <div class="row well">
@using (Html.BeginForm("ShowController", "Parking", FormMethod.Post, new { @class = "form-inline", role = "form" }))
{


            <fieldset>
                <legend>Find Parking</legend>
                @{ if (!String.IsNullOrEmpty(ViewBag.errorMessage))
                    {
                        <div class="text-danger">
                            @ViewBag.errorMessage
                        </div>
                    }
                }
                <div class="form-group">
                    @Html.LabelFor(m => m.DateIn, new { @class = "control-label" })
                    <div class="input-group" id="datetimepicker">
                        @Html.EditorFor(m => m.DateIn, new { @class = "from-control" })
                        
                        @Html.ValidationMessageFor(m => m.DateIn)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.TimeIn, new { @class = "control-label" })
                    <div class="input-group" id="datatimepicker">
                        @Html.EditorFor(m => m.TimeIn, new { @class = "from-control" })
                        @Html.ValidationMessageFor(m => m.TimeIn)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.DateOut, new { @class = "control-label" })
                    <div class="input-group" id="datetimepicker">
                        @Html.EditorFor(m => m.DateOut, new { @class = "from-control" })
                        
                        @Html.ValidationMessageFor(m => m.DateOut)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.TimeOut, new { @class = "control-label" })
                    <div class="input-group" id="datetimepicker">
                        @Html.EditorFor(m => m.TimeOut, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.TimeOut)
                    </div>
                </div>
               <div class="form-group">
                   @Html.LabelFor( m=>m.Selectedbuilding, new { @class = "control-label" })
                   @Html.DropDownListFor(m => m.Selectedbuilding, new SelectList(Model.Building, "Value", "Text"), "Building")   
                   @Html.ValidationMessageFor(m => m.Selectedbuilding)               
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Selectedlevel, new { @class = "control-label" })
                    @Html.DropDownListFor(m => m.Selectedlevel, new SelectList(Model.Level, "Value","Text"),"Level")
                    @Html.ValidationMessageFor(m=>m.Selectedlevel)
                    </div>



                    <div class="form-group">
                        <div class="col-sm-offset-4 col-sm-10">
                            <button type="submit" class="btn btn-primary">Find</button>
                        </div>
                    </div>
</fieldset>
            <script>
        $(document).ready(function ()
        {
            $("#datetimepicker").datetimepicker();

           

        });
            </script>
                    }
    </div>
        @if (Model.ParkingList != null)
        {
            @Html.Partial("ShowParkingList",Model)
        }

